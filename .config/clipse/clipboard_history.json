{"clipboardHistory":[{"value":"# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.\n# Initialization code that may require console input (password prompts, [y/n]\n# confirmations, etc.) must go above this block; everything else may go below.\nif [[ -r \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\" ]]; then\n  source \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\"\nfi\n\nexport LC_ALL=\"en_US.UTF-8\"\nexport ZSH=\"$HOME/.oh-my-zsh\"\nexport PATH=\"$PATH:/opt/nvim/\"\nCASE_SENSITIVE=\"true\"\n\n# Uncomment one of the following lines to change the auto-update behavior\n# zstyle ':omz:update' mode disabled  # disable automatic updates\nzstyle ':omz:update' mode auto      # update automatically without asking\n# zstyle ':omz:update' mode reminder  # just remind me to update when it's time\n\n# Uncomment the following line to change how often to auto-update (in days).\n# zstyle ':omz:update' frequency 13\n\n# Uncomment the following line if you want to change the command execution time\n# stamp shown in the history command output.\n# You can set one of the optional three formats:\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\n# or set a custom format using the strftime function format specifications,\n# see 'man strftime' for details.\nHIST_STAMPS=\"dd/mm/yyyy\"\n\n# Would you like to use another custom folder than $ZSH/custom?\n# ZSH_CUSTOM=/path/to/new-custom-folder\n\n# Which plugins would you like to load?\n# Standard plugins can be found in $ZSH/plugins/\n# Custom plugins may be added to $ZSH_CUSTOM/plugins/\n# Example format: plugins=(rails git textmate ruby lighthouse)\n# Add wisely, as too many plugins slow down shell startup.\nplugins=(git)\n\nsetopt autocd              # change directory just by typing its name\n#setopt correct            # auto correct mistakes\nsetopt interactivecomments # allow comments in interactive mode\nsetopt magicequalsubst     # enable filename expansion for arguments of the form ‘anything=expression’\nsetopt nonomatch           # hide error message if there is no match for the pattern\nsetopt notify              # report the status of background jobs immediately\nsetopt numericglobsort     # sort filenames numerically when it makes sense\nsetopt promptsubst         # enable command substitution in prompt\n\nWORDCHARS=${WORDCHARS//\\/} # Don't consider certain characters part of the word\n\n# hide EOL sign ('%')\nPROMPT_EOL_MARK=\"\"\n\n# configure key keybindings\nbindkey -e                                        # emacs key bindings\nbindkey ' ' magic-space                           # do history expansion on space\nbindkey '^U' backward-kill-line                   # ctrl + U\nbindkey '^[[3;5~' kill-word                       # ctrl + Supr\nbindkey '^[[3~' delete-char                       # delete\nbindkey '^[[1;5C' forward-word                    # ctrl + -\u003e\nbindkey '^[[1;5D' backward-word                   # ctrl + \u003c-\nbindkey '^[[5~' beginning-of-buffer-or-history    # page up\nbindkey '^[[6~' end-of-buffer-or-history          # page down\nbindkey '^[[H' beginning-of-line                  # home\nbindkey '^[[F' end-of-line                        # end\nbindkey '^[[Z' undo                               # shift + tab undo last action\n\n# enable completion features\nautoload -Uz compinit\ncompinit -d ~/.cache/zcompdump\nzstyle ':completion:*:*:*:*:*' menu select\nzstyle ':completion:*' auto-description 'specify: %d'\nzstyle ':completion:*' completer _expand _complete\nzstyle ':completion:*' format 'Completing %d'\nzstyle ':completion:*' group-name ''\nzstyle ':completion:*' list-colors 'ma=30;103'  # Black text on bright yellow background for selected item\nzstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s\nzstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'\nzstyle ':completion:*' rehash true\nzstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s\nzstyle ':completion:*' use-compctl false\nzstyle ':completion:*' verbose true\nzstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'\n\n# History configurations\nHISTFILE=~/.zsh_history\nHISTSIZE=1000\nSAVEHIST=2000\nsetopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE\nsetopt hist_ignore_dups       # ignore duplicated commands history list\nsetopt hist_ignore_space      # ignore commands that start with space\nsetopt hist_verify            # show command with history expansion to user before running it\n#setopt share_history         # share command history data\n\n# force zsh to show the complete history\nalias history=\"history 0\"\n\n# configure `time` format\nTIMEFMT=$'\\nreal\\t%E\\nuser\\t%U\\nsys\\t%S\\ncpu\\t%P'\n\n# make less more friendly for non-text input files, see lesspipe(1)\n#[ -x /usr/bin/lesspipe ] \u0026\u0026 eval \"$(SHELL=/bin/sh lesspipe)\"\n\n# set variable identifying the chroot you work in (used in the prompt below)\nif [ -z \"${debian_chroot:-}\" ] \u0026\u0026 [ -r /etc/debian_chroot ]; then\n    debian_chroot=$(cat /etc/debian_chroot)\nfi\n\n# set a fancy prompt (non-color, unless we know we \"want\" color)\ncase \"$TERM\" in\n    xterm-color|*-256color) color_prompt=yes;;\nesac\n\n# uncomment for a colored prompt, if the terminal has the capability; turned\n# off by default to not distract the user: the focus in a terminal window\n# should be on the output of commands, not on the prompt\nforce_color_prompt=yes\n\nif [ -n \"$force_color_prompt\" ]; then\n    if [ -x /usr/bin/tput ] \u0026\u0026 tput setaf 1 \u003e\u0026/dev/null; then\n        # We have color support; assume it's compliant with Ecma-48\n        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such\n        # a case would tend to support setf rather than setaf.)\n        color_prompt=yes\n    else\n        color_prompt=\n    fi\nfi\nconfigure_prompt() {\n    prompt_symbol=\"  \"\n    case \"$PROMPT_ALTERNATIVE\" in\n        twoline)\n            # Two-line rainbow format with Arch symbol\n            PROMPT=$'%F{cyan}┌──${debian_chroot:+($debian_chroot)─}${VIRTUAL_ENV:+($(basename $VIRTUAL_ENV))─}(%B%F{red}%n%b%F{yellow}'$prompt_symbol$'%B%F{green}%m%b%F{cyan})%F{reset}[%B%F{blue}%(6~.%-1~/…/%4~.%5~)%b%F{reset}]%F{reset}[%B%F{magenta}%D{%Y/%m/%d}%b%F{reset}]%F{reset}[%B%F{yellow}%D{%H:%M:%S}%b%F{reset}]\\n%F{cyan}└─%B%(#.%F{red}#.%F{green}$)%b%F{reset} '\n            RPROMPT=\n            ;;\n        oneline)\n            # One-line rainbow compact format with Arch symbol\n            PROMPT=$'${debian_chroot:+($debian_chroot)}${VIRTUAL_ENV:+($(basename $VIRTUAL_ENV))}%B%F{red}%n%b%F{yellow}'$prompt_symbol$'%B%F{green}%m%b%F{reset}[%B%F{blue}%~%b%F{reset}]%F{reset}[%B%F{magenta}%D{%Y/%m/%d}%b%F{reset}]%F{reset}[%B%F{yellow}%D{%H:%M:%S}%b%F{reset}]%(#.#.$) '\n            RPROMPT=\n            ;;\n        backtrack)\n            # Backtrack-style rainbow format with Arch symbol\n            PROMPT=$'${debian_chroot:+($debian_chroot)}${VIRTUAL_ENV:+($(basename $VIRTUAL_ENV))}%B%F{red}%n%b%F{yellow}'$prompt_symbol$'%B%F{green}%m%b%F{reset}[%B%F{blue}%~%b%F{reset}]%F{reset}[%B%F{magenta}%D{%Y/%m/%d}%b%F{reset}]%F{reset}[%B%F{yellow}%D{%H:%M:%S}%b%F{reset}]%(#.#.$) '\n            RPROMPT=\n            ;;\n    esac\n    unset prompt_symbol\n}\n\n# The following block is surrounded by two delimiters.\n# These delimiters must not be modified. Thanks.\n# START KALI CONFIG VARIABLES\nPROMPT_ALTERNATIVE=twoline\nNEWLINE_BEFORE_PROMPT=yes\n# STOP KALI CONFIG VARIABLES\n\nif [ \"$color_prompt\" = yes ]; then\n    # override default virtualenv indicator in prompt\n    VIRTUAL_ENV_DISABLE_PROMPT=1\n\n    configure_prompt\n\n    # enable syntax-highlighting\n    if [ -f /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then\n        . /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\n        ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)\n        ZSH_HIGHLIGHT_STYLES[default]=none\n        ZSH_HIGHLIGHT_STYLES[unknown-token]=underline\n        ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=cyan,bold\n        ZSH_HIGHLIGHT_STYLES[suffix-alias]=fg=green,underline\n        ZSH_HIGHLIGHT_STYLES[global-alias]=fg=green,bold\n        ZSH_HIGHLIGHT_STYLES[precommand]=fg=green,underline\n        ZSH_HIGHLIGHT_STYLES[commandseparator]=fg=blue,bold\n        ZSH_HIGHLIGHT_STYLES[autodirectory]=fg=green,underline\n        ZSH_HIGHLIGHT_STYLES[path]=bold\n        ZSH_HIGHLIGHT_STYLES[path_pathseparator]=\n        ZSH_HIGHLIGHT_STYLES[path_prefix_pathseparator]=\n        ZSH_HIGHLIGHT_STYLES[globbing]=fg=blue,bold\n        ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=blue,bold\n        ZSH_HIGHLIGHT_STYLES[command-substitution]=none\n        ZSH_HIGHLIGHT_STYLES[command-substitution-delimiter]=fg=magenta,bold\n        ZSH_HIGHLIGHT_STYLES[process-substitution]=none\n        ZSH_HIGHLIGHT_STYLES[process-substitution-delimiter]=fg=magenta,bold\n        ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=fg=green\n        ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=fg=green\n        ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none\n        ZSH_HIGHLIGHT_STYLES[back-quoted-argument-delimiter]=fg=blue,bold\n        ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=yellow\n        ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=yellow\n        ZSH_HIGHLIGHT_STYLES[dollar-quoted-argument]=fg=yellow\n        ZSH_HIGHLIGHT_STYLES[rc-quote]=fg=magenta\n        ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=magenta,bold\n        ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=magenta,bold\n        ZSH_HIGHLIGHT_STYLES[back-dollar-quoted-argument]=fg=magenta,bold\n        ZSH_HIGHLIGHT_STYLES[assign]=none\n        ZSH_HIGHLIGHT_STYLES[redirection]=fg=blue,bold\n        ZSH_HIGHLIGHT_STYLES[comment]=fg=black,bold\n        ZSH_HIGHLIGHT_STYLES[named-fd]=none\n        ZSH_HIGHLIGHT_STYLES[numeric-fd]=none\n        ZSH_HIGHLIGHT_STYLES[arg0]=fg=cyan\n        ZSH_HIGHLIGHT_STYLES[bracket-error]=fg=red,bold\n        ZSH_HIGHLIGHT_STYLES[bracket-level-1]=fg=blue,bold\n        ZSH_HIGHLIGHT_STYLES[bracket-level-2]=fg=green,bold\n        ZSH_HIGHLIGHT_STYLES[bracket-level-3]=fg=magenta,bold\n        ZSH_HIGHLIGHT_STYLES[bracket-level-4]=fg=yellow,bold\n        ZSH_HIGHLIGHT_STYLES[bracket-level-5]=fg=cyan,bold\n        ZSH_HIGHLIGHT_STYLES[cursor-matchingbracket]=standout\n    fi\nelse\n    PROMPT='${debian_chroot:+($debian_chroot)}%n@%m:%~%(#.#.$) '\nfi\nunset color_prompt force_color_prompt\n\ntoggle_oneline_prompt(){\n    if [ \"$PROMPT_ALTERNATIVE\" = oneline ]; then\n        PROMPT_ALTERNATIVE=twoline\n    else\n        PROMPT_ALTERNATIVE=oneline\n    fi\n    configure_prompt\n    zle reset-prompt\n}\nzle -N toggle_oneline_prompt\nbindkey ^P toggle_oneline_prompt\n\n# If this is an xterm set the title to user@host:dir\ncase \"$TERM\" in\nxterm*|rxvt*|Eterm|aterm|kterm|gnome*|alacritty)\n    TERM_TITLE=$'\\e]0;${debian_chroot:+($debian_chroot)}${VIRTUAL_ENV:+($(basename $VIRTUAL_ENV))}%n@%m: %~\\a'\n    ;;\n*)\n    ;;\nesac\n\nprecmd() {\n    # Print the previously configured title\n    print -Pnr -- \"$TERM_TITLE\"\n\n    # Print a new line before the prompt, but only if it is not the first line\n    if [ \"$NEWLINE_BEFORE_PROMPT\" = yes ]; then\n        if [ -z \"$_NEW_LINE_BEFORE_PROMPT\" ]; then\n            _NEW_LINE_BEFORE_PROMPT=1\n        else\n            print \"\"\n        fi\n    fi\n}\n\n# enable color support of ls, less and man, and also add handy aliases\nif [ -x /usr/bin/dircolors ]; then\n    test -r ~/.dircolors \u0026\u0026 eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n    export LS_COLORS=\"$LS_COLORS:ow=30;44:\" # fix ls color for folders with 777 permissions\n\n    alias ls='ls --color=auto'\n    #alias dir='dir --color=auto'\n    #alias vdir='vdir --color=auto'\n\n    alias grep='grep --color=auto'\n    alias fgrep='fgrep --color=auto'\n    alias egrep='egrep --color=auto'\n    alias diff='diff --color=auto'\n    alias ip='ip --color=auto'\n\n    export LESS_TERMCAP_mb=$'\\E[1;31m'     # begin blink\n    export LESS_TERMCAP_md=$'\\E[1;36m'     # begin bold\n    export LESS_TERMCAP_me=$'\\E[0m'        # reset bold/blink\n    export LESS_TERMCAP_so=$'\\E[01;33m'    # begin reverse video\n    export LESS_TERMCAP_se=$'\\E[0m'        # reset reverse video\n    export LESS_TERMCAP_us=$'\\E[1;32m'     # begin underline\n    export LESS_TERMCAP_ue=$'\\E[0m'        # reset underline\n\n    # Take advantage of $LS_COLORS for completion as well\n    zstyle ':completion:*' list-colors \"${(s.:.)LS_COLORS}\"\n    zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'\nfi\n\n# Custom aliases\nalias imlazy='sudo pacman -Syu \u0026\u0026 yay -Sy \u0026\u0026 sudo update-grub'\nalias imissarch='sudo apt-get update \u0026\u0026 sudo apt-get upgrade'\n\n# Some more ls aliases\nalias ll='ls -l'\nalias la='ls -A'\nalias l='ls -CF'\n\n# Easier navigation: .., ..., ...., .....\nalias ..=\"cd ..\"\nalias ...=\"cd ../..\"\nalias ....=\"cd ../../..\"\nalias .....=\"cd ../../../..\"\n\n# Shortcuts\nalias dl=\"cd ~/Downloads\"\nalias st=\"cd ~/Storage\"\nalias pj=\"cd ~/Projects\"\nalias dt=\"cd ~/Desktop\"\nalias g=\"git\"\nalias reload=\"source ~/.zshrc\"\n\nbindkey '^E' autosuggest-accept\n\n# Download Znap, if it's not there yet.\n[[ -r ~/zshRepos/znap/znap.zsh ]] ||\n    git clone --depth 1 -- \\\n        https://github.com/marlonrichert/zsh-snap.git ~/zshRepos/znap\nsource ~/zshRepos/znap/znap.zsh  # Start Znap\nznap source marlonrichert/zsh-autocomplete # Znap Autocomplete\nznap source zsh-users/zsh-autosuggestions # Autosuggestions\n\n# enable command-not-found if installed (pkgfile on Arch)\nif [ -f /usr/share/doc/pkgfile/command-not-found.zsh ]; then\n    source /usr/share/doc/pkgfile/command-not-found.zsh\nfi\n\n# thefuck alias (if installed)\nif command -v thefuck \u0026\u003e /dev/null; then\n    eval $(thefuck --alias)\nfi\n\n# ============================================\n# Python Environment Management\n# ============================================\n# Source Python environment tools\nif [[ -f ~/Scripts/py_env_tools.sh ]]; then\n    source ~/Scripts/py_env_tools.sh\nfi\n\nexport PATH=\"$HOME/bin:$PATH\"\n\n# Show fastfetch in Kitty terminals\nif [[ \"$TERM\" == \"xterm-kitty\" ]]; then\n    fastfetch\nfi\n\n# Kitty icat alias for displaying images\nalias icat=\"kitty +kitten icat\"\n\nexport PATH=\"$HOME/.local/bin:$PATH\"\n\nexport NVM_DIR=\"$HOME/.config/nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] \u0026\u0026 \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n","recorded":"2025-10-20 00:36:12.375333446","filePath":"null","pinned":false},{"value":"  - discord, obs-studio\n  - Electron, pulse, session\n  - fcitx, fcitx5, ibus, mozc (input methods - unless you styled these?)\n  - go, yay (app data)\n  - nautilus, dolphinrc (file managers - unless styled?)\n  - various config files (mimeapps.list, user-dirs.*, etc.)","recorded":"2025-10-20 00:31:47.290221024","filePath":"null","pinned":false},{"value":"d/Cache/Cache_Data/index-dir/\ndiscord/Cache/Cache_Data/index-dir/the-real-index\ndiscord/Code Cache/\ndiscord/Code Cache/js/\ndiscord/Code Cache/js/035225fe2734324c_0\ndiscord/Code Cache/js/035eca274a923c5c_0\ndiscord/Code Cache/js/04aeb3f8dc4e4caa_0\ndiscord/Code Cache/js/07dec8dfe858e039_0\ndiscord/Code Cache/js/08cca8d0a4e8dd69_0\ndiscord/Code Cache/js/0a900bcd4b95d81e_0\ndiscord/Code Cache/js/0cdb1592bed0f4bc_0\ndiscord/Code Cache/js/17dfa3ce35e14daf_0\ndiscord/Code Cache/js/1b849b7eb97b3b99_0\ndiscord/Code Cache/js/23ad6b0d151fa03f_0\ndiscord/Code Cache/js/24e4f31a49c707bf_0\ndiscord/Code Cache/js/25da814f4ff5434e_0\ndiscord/Code Cache/js/262329883fcb5ef9_0\ndiscord/Code Cache/js/28b4ff4594c43a37_0\ndiscord/Code Cache/js/2bdbf71e45da54ae_0\ndiscord/Code Cache/js/3456b3be5745c481_0\ndiscord/Code Cache/js/353d8a86f5aa8586_0\ndiscord/Code Cache/js/3706024985888c8b_0\ndiscord/Code Cache/js/3884fbb949dc9bf7_0\ndiscord/Code Cache/js/3966595c31b5f718_0\ndiscord/Code Cache/js/3b65b1c07338adde_0\ndiscord/Code Cache/js/3dd65f43f431644c_0\ndiscord/Code Cache/js/3dfe57ae3072a3dd_0\ndiscord/Code Cache/js/4391b25b7c4238b3_0\ndiscord/Code Cache/js/47cd43e85302a28b_0\ndiscord/Code Cache/js/49c47beffcc06492_0\ndiscord/Code Cache/js/4e76d19b720992b6_0\ndiscord/Code Cache/js/54c1e7f3b13c2374_0\ndiscord/Code Cache/js/56172a0d21636f33_0\ndiscord/Code Cache/js/64f9175c0e3eef04_0\ndiscord/Code Cache/js/65c113d9dd497a9f_0\ndiscord/Code Cache/js/69fb7c8a72f52f5b_0\ndiscord/Code Cache/js/6cbd60692ed9d3b4_0\ndiscord/Code Cache/js/6d8a83084a6c0418_0\ndiscord/Code Cache/js/6ed624101261732c_0\ndiscord/Code Cache/js/76086312cd67a6e2_0\ndiscord/Code Cache/js/7de42174e2743dfb_0\ndiscord/Code Cache/js/7df11367828fb6dd_0\ndiscord/Code Cache/js/7f06d6681b3e7111_0","recorded":"2025-10-20 00:29:42.787537405","filePath":"null","pinned":false},{"value":"cord/logs/discord-last-webrtc_0\ndiscord/logs/discord-webrtc_0\ndiscord/logs/discord_krisp.log\ndiscord/logs/discord_utils.log\ndiscord/logs/legacyModulesUpdater.log\ndiscord/logs/renderer_js.log\ndiscord/sentry/\ndiscord/sentry/scope_v3.json\ndiscord/sentry/queue/\ndiscord/sentry/queue/queue.json\ndiscord/shared_proto_db/\ndiscord/shared_proto_db/000003.log\ndiscord/shared_proto_db/CURRENT\ndiscord/shared_proto_db/LOCK\ndiscord/shared_proto_db/LOG\ndiscord/shared_proto_db/LOG.old\ndiscord/shared_proto_db/MANIFEST-000001\ndiscord/shared_proto_db/metadata/\ndiscord/shared_proto_db/metadata/000003.log\ndiscord/shared_proto_db/metadata/CURRENT\ndiscord/shared_proto_db/metadata/LOCK\ndiscord/shared_proto_db/metadata/LOG\ndiscord/shared_proto_db/metadata/LOG.old\ndiscord/shared_proto_db/metadata/MANIFEST-000001\ndunst/\ndunst/dunstrc\nfastfetch/\nfastfetch/config.jsonc\nfastfetch/config.jsonc.bak\nfcitx/\nfcitx/dbus/\nfcitx5/\nfcitx5/config\nfcitx5/profile\nfcitx5/conf/\nfcitx5/conf/cached_layouts\nfcitx5/conf/chttrans.conf\nfcitx5/conf/classicui.conf\nfcitx5/conf/notifications.conf\nfcitx5/conf/pinyin.conf\nfcitx5/conf/punctuation.conf\nfontconfig/\nfontconfig/fonts.conf\ngo/\ngo/telemetry/\ngo/telemetry/local/\ngo/telemetry/local/asm@devel-devel-linux-amd64-2025-10-17.v1.count\ngo/telemetry/local/asm@devel-devel-linux-amd64-2025-10-18.v1.count\ngo/telemetry/local/cgo@devel-devel-linux-amd64-2025-10-17.v1.count\ngo/telemetry/local/cgo@devel-devel-linux-amd64-","recorded":"2025-10-20 00:29:39.536057972","filePath":"null","pinned":false},{"value":"git config --global core.symlinks","recorded":"2025-10-20 00:27:03.080852705","filePath":"null","pinned":false},{"value":"git add -L .config\nerror: unknown switch `L'\nusage: git add [\u003coptions\u003e] [--] \u003cpathspec\u003e...","recorded":"2025-10-20 00:25:12.557454137","filePath":"null","pinned":false},{"value":"2F02-8B93","recorded":"2025-10-20 00:21:53.231147935","filePath":"null","pinned":false},{"value":"git config --global user.name \"Your Name","recorded":"2025-10-20 00:20:13.910865144","filePath":"null","pinned":false},{"value":"![](my_video.mov)","recorded":"2025-10-20 00:19:25.684537217","filePath":"null","pinned":false},{"value":"\n","recorded":"2025-10-20 00:19:23.323980529","filePath":"null","pinned":false},{"value":"(Optional, if you want your system to be 100% like mine)","recorded":"2025-10-20 00:17:05.561056479","filePath":"null","pinned":false},{"value":"On any distribution, a working installation of Gnome 47 is needed","recorded":"2025-10-20 00:01:29.437981083","filePath":"null","pinned":false},{"value":"a month ago :ubuntu: \nyesterday: i use :arch: btw\ntoday: i use :nyarch: btw","recorded":"2025-10-19 23:56:56.278968795","filePath":"null","pinned":false},{"value":"i'll likely just mount my other ssd to store ","recorded":"2025-10-19 23:55:24.482067293","filePath":"null","pinned":false},{"value":"    ~/.config/hypr/hyprlock.conf","recorded":"2025-10-19 23:52:18.400657527","filePath":"null","pinned":false},{"value":"Hyprlock version v0.9.2 (commit 36ec73f)\n[CRITICAL] ConfigManager threw: Could not find config in HOME, XDG_CONFIG_HOME, XDG_CONFIG_DIRS or /etc/hypr.","recorded":"2025-10-19 23:52:03.602332491","filePath":"null","pinned":false},{"value":"yay -S hyprlock-git","recorded":"2025-10-19 23:45:50.169651678","filePath":"null","pinned":false},{"value":"hyprlock","recorded":"2025-10-19 23:45:27.241324659","filePath":"null","pinned":false},{"value":"📷 248445-757589863.png","recorded":"2025-10-19 23:41:57.799647452","filePath":"/home/kuroma/Pictures/Screenshot/248445-757589863.png","pinned":false},{"value":"[3/3] Copying /etc modifications...\nSearching for modified system configurations...\nscripts/pull-configs.sh: line 72: hostname: command not found\nscripts/pull-configs.sh: line 95: syntax error near unexpected token `2'","recorded":"2025-10-19 23:35:19.294656716","filePath":"null","pinned":false},{"value":" /etc modifications (daemons, systemctl configs)","recorded":"2025-10-19 23:17:36.172565226","filePath":"null","pinned":false},{"value":"(daemons, systemctl configs)","recorded":"2025-10-19 23:17:33.972265134","filePath":"null","pinned":false},{"value":"📷 190676-168221345.png","recorded":"2025-10-19 23:09:25.196122233","filePath":"/home/kuroma/Pictures/Screenshot/190676-168221345.png","pinned":false},{"value":"https://github.com/qwersyk/Newelle","recorded":"2025-10-19 23:06:47.165122526","filePath":"null","pinned":false},{"value":"https://github.com/NyarchLinux/NyarchAssistant","recorded":"2025-10-19 23:06:03.629782876","filePath":"null","pinned":false},{"value":"/home/kuroma/Storage/Projects/dotfiles","recorded":"2025-10-19 23:04:24.497507698","filePath":"null","pinned":false},{"value":"📷 10903-926002098.png","recorded":"2025-10-19 23:02:15.931173705","filePath":"/home/kuroma/Pictures/Screenshot/10903-926002098.png","pinned":false},{"value":"bind = CTRL SHIFT, S, exec, zsh -c 'grim -g \"$(slurp)\" - | wl-copy \u0026\u0026 notify-send \"Screenshot copied to clipboard\"'","recorded":"2025-10-19 23:01:56.417405653","filePath":"null","pinned":false},{"value":"bind = CTRL SHIFT, S, exec, zsh -c grim -g \\\"$(slurp)\\\" - | wl-copy \u0026\u0026 notify-send 'Screenshot copied to clipboard'\n","recorded":"2025-10-19 23:01:26.297638724","filePath":"null","pinned":false}]}